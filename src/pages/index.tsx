import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import {
    SignUpButton,
    SignInButton,
    useUser,
    SignOutButton,
} from "@clerk/nextjs";
import AccountViews from "./component/accountViews";

export default function Home() {
    const user = useUser();

    // const token = api.linkToken.createLinkToken.useQuery(user?.id);

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex h-screen justify-center">
                <div className="md: h-full w-full max-w-3xl border-x border-slate-400 ">
                    <div className="border-b border-slate-400 p-4 ">
                        {!user.isSignedIn && (
                            <div className="flex justify-center">
                                <SignInButton />
                            </div>
                        )}
                        {!!user.isSignedIn && (
                            <div className="flex justify-around">
                                <div className="flex">
                                    <img
                                        src={user.user.imageUrl}
                                        className="h-14 w-14 rounded-full"
                                    />{" "}
                                    {user.user.fullName}{" "}
                                </div>
                                <div>
                                    <SignOutButton />
                                </div>
                            </div>
                        )}
                    </div>
                    <AccountViews />
                </div>
            </main>
        </>
    );
}

function AuthShowcase() {
    const { data: sessionData } = useSession();

    const { data: secretMessage } = api.accounts.getSecretMessage.useQuery(
        undefined, // no input
        { enabled: sessionData?.user !== undefined }
    );

    return (
        <div className="flex flex-col items-center justify-center gap-4">
            <p className="text-center text-2xl text-white">
                {sessionData && (
                    <span>Logged in as {sessionData.user?.name}</span>
                )}
                {secretMessage && <span> - {secretMessage}</span>}
            </p>
            <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={
                    sessionData ? () => void signOut() : () => void signIn()
                }
            >
                {sessionData ? "Sign out" : "Sign in"}
            </button>
        </div>
    );
}
